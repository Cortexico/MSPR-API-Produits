name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: adminpassword
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\").ok' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_DB: products_db
      MONGO_USER: products
      MONGO_PASSWORD: apiProducts
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      
      RABBITMQ_HOST: localhost
      RABBITMQ_PORT: 5672
      
      PYTHONPATH: ${{ github.workspace }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install asgi-lifespan

    - name: Install MongoDB Client
      run: |
        wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
        sudo apt-get update
        sudo apt-get install -y mongodb-org-shell

    - name: Setup MongoDB User
      run: |
        mongo "mongodb://admin:adminpassword@localhost:27017/admin" --eval '
          db.getSiblingDB("products_db").createUser({
            user: "products",
            pwd: "apiProducts",
            roles: [{ role: "readWrite", db: "products_db" }]
          });
        '
    - name: Wait for RabbitMQ to be ready
      run: |
        for i in {1..30}; do
          if nc -z localhost 5672; then
            echo "RabbitMQ is ready"
            break
          else
            echo "Waiting for RabbitMQ..."
            sleep 1
          fi
        done

    - name: Set PYTHONPATH
      run: |
        echo "PYTHONPATH=${{ github.workspace }}:${{ github.workspace }}/app" >> $GITHUB_ENV
    
    - name: Run test_create_product.py
      run: pytest -v tests/test_create_product.py

    - name: Run test_get_products.py
      run: pytest -v tests/test_get_products.py

    - name: Run test_get_product.py
      run: pytest -v tests/test_get_product.py

    - name: Run test_update_product.py
      run: pytest -v tests/test_update_product.py

    - name: Run test_delete_product.py
      run: pytest -v tests/test_delete_product.py
    
    - name: Lint code
      run: |
        pip install flake8
        flake8 app/
